***** План реализации для сервиса подбора фотографий из базы данных *****

1. Для того, чтобы выдать пользователю результат, нам нужно знать его местоположение, а также текущие дату и время. Дата и время получаются очень просто с помощью класса datetime из модуля datetime. Для получения местоположения пользователю должно предлагаться ввести его вручную либо в виде latitude/longitude, либо в виде полного адресса (который потом нужно будет привести к виду latitude/longitude, например, с помощью Yandex Maps API). Это значит, что нужно каким-то образовать реализовать такую вариативность (можно сделать два поля, либо хитрый обработчик).

2. Так как мы знаем местоположение пользователя и текущие время/дату, то можем запросить текущую погоду с помощью OpenWeather API. Из полученного ответа нам нужно будет вычленить значение поля "clouds", где указывается степень облачности.

3. Очевидно, что если мы запросим у базы данных изображения, у которых дата/время, местоположение и погода в точности такие, что и пользователя, то мы ничего не получим в ответ, как минимум потому что будет отличаться время (ведь все изображения загружались какое-то время назад). Поэтому требуется определить диапазоны для дат, времени, местоположения и погоды. Например, диапазон дат это +/- месяц от текущего числа, диапазон времени это +/- 3 часа от текущего времени, диапазон местоположения это +/- 0.2 градуса для долготы и широты от текущих значений, диапазон погоды это +/- 20 от текущего значения облачности. В качестве альтернативы у Маши была идея расчитывать отклонения для всех в фото в базе от текущих значений и домножать на весовые коэффициенты для каждого показателя, а потом минимизировать функцию. Такая затея, однако, будет очень очень очень ресурсозатратной, поэтому пока что мы не будем пытаться её реализовать.

4. Зная диапазоны значений по каждому из критериев, мы теперь можем получить список всех полей (entry_id), которые им удовлетворяют. Для это предлагается использовать метод get_entry_id_by_parameters из класса ImageDatabase модуля database.database_client_new. На данный момент реализация у этого запроса неправильная, поэтому требуется его исправить в ближайшее время.

5. Теперь у нас есть список всех полей, которые подходят нашему пользователю. С помощью метода get_location_by_entry_id из класса ImageDatabase модуля database.database_client_new мы получаем местоположение (latitude и longitude) для каждого поля (entry_id) - нужно будет сделать цикл по всем элементам списка полей. На вход подаётся entry_id, на выходе список из двух элементов - широты и долготы.

6. Тоже самое нужно сделать для получения списка цветов из базы данных (также делать цикл по всем элементам списка). Для этого нужно использовать метод get_colors_by_entry_id из класса ImageDatabase модуля database.database_client_new. На вход подаётся entry_id, на выходе список всех основных цветов, которые были извлечены из фото.

7. После этого, зная местоположения, нужно нанести метки на карту. В каждую из меток в виде картинки нужно добавить цвета, которые можно встретить в этой точке. Также, если это возможно реализовать, при нажатии на метку должно открываться само фото.